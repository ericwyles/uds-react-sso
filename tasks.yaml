# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

includes:
  - test: ./tasks/test.yaml
  - create: https://raw.githubusercontent.com/defenseunicorns/uds-common/v1.8.0/tasks/create.yaml
  - lint: https://raw.githubusercontent.com/defenseunicorns/uds-common/v1.8.0/tasks/lint.yaml
  - pull: https://raw.githubusercontent.com/defenseunicorns/uds-common/v1.8.0/tasks/pull.yaml
  - deploy: https://raw.githubusercontent.com/defenseunicorns/uds-common/v1.8.0/tasks/deploy.yaml
  - setup: https://raw.githubusercontent.com/defenseunicorns/uds-common/v1.8.0/tasks/setup.yaml
  - actions: https://raw.githubusercontent.com/defenseunicorns/uds-common/v1.8.0/tasks/actions.yaml
  - badge: https://raw.githubusercontent.com/defenseunicorns/uds-common/v1.8.0/tasks/badge.yaml
  - upgrade: https://raw.githubusercontent.com/defenseunicorns/uds-common/v1.8.0/tasks/upgrade.yaml
  - compliance: https://raw.githubusercontent.com/defenseunicorns/uds-common/v1.8.0/tasks/compliance.yaml
  - publish: https://raw.githubusercontent.com/defenseunicorns/uds-common/v1.8.0/tasks/publish.yaml

variables:
  - name: UI_IMAGE_TAG
    default: ewyles/sampleapp-ui:latest
  - name: API_IMAGE_TAG
    default: ewyles/sampleapp-api:latest

tasks:
  - name: default
    description: Setup k3d cluster, deploy package
    actions:
      - task: build-ui-image
      - task: build-api-image
      - task: create-dev-package
      - task: setup:k3d-test-cluster
        with:
          use_checkpoint: "false"
      - task: create-deploy-test-bundle

  - name: build-ui-image
    actions:
      - description: Build Docker Image
        cmd: |
          docker build -t "$UI_IMAGE_TAG" ./app/ui
          echo "build image and tagged as $UI_IMAGE_TAG"

  - name: build-api-image
    actions:
      - description: Build Docker Image
        cmd: |
          docker build -t "$API_IMAGE_TAG" ./app/api
          echo "build image and tagged as $API_IMAGE_TAG"

  - name: create-dev-package
    description: Create the package
    actions:
      - task: create:package
        with:
          options: "--skip-sbom"

  - name: create-deploy-test-bundle
    description: Test and validate cluster is deployed with the package
    actions:
      - task: create:test-bundle
      - task: deploy:test-bundle
      - task: setup:create-doug-user
      #- task: test:all

  - name: dev
    description: Create and deploy the bundle on an existing cluster (for iteration/dev speed)
    actions:
      - cmd: kubectl delete namespace sampleapp
      - task: build-ui-image
      - task: build-api-image
      - task: create-dev-package
      - task: create-deploy-test-bundle

  - name: test-doug-token
    actions:
      - description: test doug token
        cmd: |
          response=$(curl -s -X POST "https://sso.uds.dev/realms/uds/protocol/openid-connect/token" \
              -H "Content-Type: application/x-www-form-urlencoded" \
              -d "grant_type=password" \
              -d "client_id=admin-cli" \
              -d "username=doug" \
              -d "password=unicorn123!@#UN")

          # Extract Access Token
          ACCESS_TOKEN=$(echo "$response" | jq -r .access_token)

          # Output the token
          if [[ "$ACCESS_TOKEN" == "null" || -z "$ACCESS_TOKEN" ]]; then
              echo "Failed to obtain access token."
              echo "Response: $response"
              exit 1
          else
              echo "Access Token:"
              echo "$ACCESS_TOKEN"
          fi      

          curl -H "Authorization: Bearer $ACCESS_TOKEN" https://sampleapp.uds.dev/api/userinfo